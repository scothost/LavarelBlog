---
##################################################################
# This playbok is designed to be ran from a jenkins pipeline
# and assumes all associated files have been checked out
# from a git repo during the 'checkout' stage
##################################################################

- name: Install rsync 
  hosts: servers
  become: true        
  gather_facts: false

  tasks:
    - name: Install rsync package
      ansible.builtin.apt:
        name: rsync
        state: present
        update_cache: true


- name: Create gzipped tarball of destination directory
  hosts: localhost
  become: yes
  vars:
    code_base_src: "/var/lib/jenkins/workspace/AnsibleDeploy/files/"
    sync_dir:  "/var/lib/jenkins/workspace/AnsibleDeploy/SyncToDeploy/"
    archive_path: "/data/codebase.tar.gz"

  tasks:
    - name: Rsync folders while excluding .git
      ansible.builtin.command: >
        rsync -avz --exclude='.git/' {{ code_base_src }} {{ sync_dir }}

    - name: Archive the folder
      ansible.builtin.archive:
        path: "{{ sync_dir }}"
        dest: "{{ archive_path }}"
        format: gz

- name: Deploy Archive to servers
  hosts: servers
  become: yes
  gather_facts: false
  vars:
    archive_file: "/data/codebase.tar.gz"
    web_root: "/var/www/html/"


  tasks:
    - name: Extract the archive to web root
      ansible.builtin.unarchive:
        src:  "{{ archive_file }}"
        dest: "{{ web_root }}"
        remote_src: no

- name: Clean Up
  hosts: servers:localhost
  become: yes
  gather_facts: no
  vars:
    sql_file: "/data/BlogSite.sql"
    archive_file: "/data/codebase.tar.gz"
  tasks:
    - name: Remove multiple local files
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - "{{ sql_file }}"
        - "{{ archive_file }}"

